declare var F: {
    new (t?: {}): {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
};
declare function dt(e: any, t: any, l: any): {
    setChildren: (t: any) => {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
    children: any;
    setOnClick: (t: any) => {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
    onClick: any;
    setIsActiveChecker: (t: any) => {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
    isActiveChecker: any;
    setIsActive: (t?: boolean) => {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
    isActive: boolean | undefined;
    setLabel: (t: any) => {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
    label: any;
    setIcon: (t: any) => {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    };
    icon: any;
    doClose: () => void;
    isOpened: boolean | undefined;
    feed: (t?: {}, l?: {
        setChildren(t: any): /*elided*/ any;
        children: any;
        setOnClick(t: any): /*elided*/ any;
        onClick: any;
        setIsActiveChecker(t: any): /*elided*/ any;
        isActiveChecker: any;
        setIsActive(t?: boolean): /*elided*/ any;
        isActive: boolean | undefined;
        setLabel(t: any): /*elided*/ any;
        label: any;
        setIcon(t: any): /*elided*/ any;
        icon: any;
        doClose(): void;
        isOpened: boolean | undefined;
        feed(t?: {}, l?: /*elided*/ any): void;
        assignProp(t: any, l: any): void;
    }) => void;
    assignProp: (t: any, l: any) => void;
};
declare namespace ct {
    function install(e: any): void;
}
declare function vt(e: any): boolean;
export { F as MenuEntry, dt as createMenuEntry, ct as default, vt as setMenuToggleSlot };
